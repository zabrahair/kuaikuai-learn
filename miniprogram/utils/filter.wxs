// const utils = require('./util.js');

function randInteger(to, from=1){
  return from + Math.floor(Math.random()*(to-from+1))
}

function formatDate(pDateStr, format="年月日") {
  if(!pDateStr || pDateStr.trim() == ''){
    return;
  }
  // console.log(pDateStr)
  var seperators = format.split('')
  // console.log(seperators)
  var dateParts = pDateStr.split('/')
  // console.log(dateParts)
  if (dateParts == pDateStr){
    dateParts = pDateStr.split('-')
  }
  var dateString = ''
  for (var i = 0; i < dateParts.length; i++){
    dateString += dateParts[i] + seperators[i]
  }
  // console.log(dateString)
  return dateString
}

function formatTime(pDateStr, format = "时分秒") {
  if (!pDateStr || pDateStr.trim() == '') {
    return;
  }
  // console.log(pDateStr)
  var seperators = format.split('')
  // console.log(seperators)
  var dateParts = pDateStr.split(':')
  // console.log(dateParts)
  if (dateParts == pDateStr) {
    dateParts = pDateStr.split('-')
  }
  var dateString = ''
  for (var i = 0; i < dateParts.length; i++) {
    dateString += dateParts[i] + seperators[i]
  }
  return dateString
}

function formatDateTime(pDateTime){
  var dateTime = pDateTime.split(' ')
  var dateStr = dateTime[0]
  var timeStr = dateTime[1]
  var dateProcessed = formatDate(dateStr)
  var timeProcessed = formatTime(timeStr)
  return dateProcessed + " " + timeProcessed
}

function intervalTime(pDateStr, pTimeStr){
  // var previousTime = mergeDateTime(pDateStr, pTimeStr);
  // var now = new Date()
  // var intervalTime = now.getTime() - previousTime.getTime()

}

function isPunctuation(letter){
  var result = false;
  // console.log('letter:', letter)
  switch (letter){
    case "，": 
      result = true
      break;
    case "。":
      result = true
      break;   
    case "？":
      result = true
      break;
    case "；":
      result = true
      break;    
    case "！":
      result = true
      break;            
    default: 
  }
  return result;
}

// 导出对外暴露的属性
module.exports = {
  randInteger: randInteger,
  formatDateTime: formatDateTime,
  formatDate: formatDate,
  formatTime: formatTime,
  intervalTime: intervalTime,
  isPunctuation: isPunctuation,
}